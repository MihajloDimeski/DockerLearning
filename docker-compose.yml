networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  shared-logs:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local


services:
  crud-app:
    build: .
    container_name: crud-app
    ports:
      - "5000:5000"
    environment:
      - DB_HOST=db
      - DB_NAME=crud_db
      - DB_USER=crud_user
      - DB_PASS=secret
    depends_on:
      - db
    volumes:
      - shared-logs:/app/logs
    networks:
      - app-network
    restart: unless-stopped

  db:
    image: postgres:13
    container_name: postgres-db
    environment:
      POSTGRES_DB: crud_db
      POSTGRES_USER: crud_user
      POSTGRES_PASSWORD: secret
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx-status.conf:/etc/nginx/conf.d/status.conf  # Needed for metrics
    depends_on:
      - crud-app
    networks:
      - app-network
    restart: unless-stopped

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    command:
      - '-nginx.scrape-uri=http://nginx/nginx_status'
    ports:
      - "9113:9113"
    depends_on:
      - nginx
    networks:
      - app-network
    restart: unless-stopped


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.6
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - app-network
    restart: unless-stopped

  elasticsearch-exporter:
    image: quay.io/prometheuscommunity/elasticsearch-exporter:latest
    container_name: elasticsearch-exporter
    command:
      - '--es.uri=http://elasticsearch:9200'
    ports:
      - "9114:9114"
    depends_on:
      - elasticsearch
    networks:
      - app-network

  logstash:
    image: docker.elastic.co/logstash/logstash:8.16.6
    container_name: logstash
    volumes:
    - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    - shared-logs:/usr/share/logstash/logs
    depends_on:
      - elasticsearch
    networks:
      - app-network
    restart: unless-stopped



  kibana:
    image: docker.elastic.co/kibana/kibana:8.16.6
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - app-network
    restart: unless-stopped



  prometheus:
    image: docker.io/prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command: "--config.file=/etc/prometheus/prometheus.yaml"
    volumes:
      - ./Prometheus/prometheus.yml:/etc/prometheus/prometheus.yaml:ro
      - prometheus-data:/prometheus
    networks:
      - app-network
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - app-network
    pid: "host"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - app-network
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    networks:
      - app-network
    restart: unless-stopped